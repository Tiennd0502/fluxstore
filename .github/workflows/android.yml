# .github/workflows/android.yml
name: Android CI

on:
  push:
    branches: [feature/*ci-cd]
  pull_request:
    branches: [feature/*ci-cd]

  workflow_dispatch:
    inputs:
      chosen-os:
        description: "Description workflow_dispatch"
        required: true
        type: choice
        options:
          - Ubuntu
          - macOS

jobs:
  testing:
    environment: testing
    name: Testing examples
    runs-on: ubuntu-latest
    env:
      ENV_SECRET: ${{ secrets.ENV_SECRET}}
      API_URL: ${{ vars.API_URL }}
      NODE_ENV: ${{ vars.NODE_ENV }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
    defaults:
      run:
        working-directory: FluxStore
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üü¢ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: üîç Show example env
        run: |
          echo "API_URL = $API_URL"
          echo "ENV_SECRET = $ENV_SECRET"
          echo "NODE_ENV = $NODE_ENV"

  build-dev:
    needs: testing
    environment: build-dev
    name: Build Development Android APK
    runs-on: ubuntu-latest

    env:
      ENV_SECRET: ${{ secrets.ENV_SECRET}}
      API_URL: ${{ vars.API_URL }}
      NODE_ENV: ${{ vars.NODE_ENV }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

    # ‚¨áÔ∏è Set default working directory to FluxStore/
    defaults:
      run:
        working-directory: FluxStore

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üü¢ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üì¶ Install Yarn
        run: npm install -g yarn

      - name: üì¶ Install dependencies
        run: yarn install

      - name: üß™ Print Environment Info
        run: |
          echo "NODE_ENV=$NODE_ENV"
          echo "API_URL=$API_URL"
          echo "ENV_SECRET=$ENV_SECRET"

      - name: üìÑ Write .env file
        run: echo "API_URL=$API_URL" > .env

      - name: ‚öôÔ∏è Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: üèóÔ∏è Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug

      - name: üì§ Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-${{ env.NODE_ENV }}.apk
          path: FluxStore/android/app/build/outputs/apk/debug/app-debug.apk

  build-prod:
    needs: testing
    environment: build-prod
    name: Build Production Android APK
    runs-on: ubuntu-latest

    env:
      ENV_SECRET: ${{ secrets.ENV_SECRET}}
      API_URL: ${{ vars.API_URL }}
      NODE_ENV: ${{ vars.NODE_ENV }}

    # ‚¨áÔ∏è Set default working directory to FluxStore/
    defaults:
      run:
        working-directory: FluxStore

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üü¢ Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üîç Show chosen-os PROD
        run: |
          echo "CHOSEN_OS = ${{ github.event.inputs.chosen-os }}"
          echo "EVENT_NAME = ${{ github.event_name }}"

      - name: üîç Show Build info PROD
        run: |
          echo "ENV_SECRET = $ENV_SECRET"
          echo "API_URL = $API_URL"
          echo "NODE_ENV = $NODE_ENV"
  # deploy:
  #   if: github.event_name == 'workflow_dispatch' || vars.NODE_ENV == 'build-prod'
  #   needs: build-prod
  #   environment: build-prod
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   env:
  #     ENV_SECRET: ${{ secrets.ENV_SECRET}}
  #     API_URL: ${{ vars.API_URL }}
  #     NODE_ENV: ${{ vars.NODE_ENV }}
  #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  #     FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

  #   steps:
  #     - name: üîç Show Deploy info
  #       run: |
  #         echo "ENV_SECRET = $ENV_SECRET"
  #         echo "API_URL = $API_URL"
  #         echo "NODE_ENV = $NODE_ENV"
  #     - name: üîç Show secrets.GITHUB_TOKEN
  #       run: echo "GITHUB_TOKEN = ${{ secrets.GITHUB_TOKEN }}"

  deploy:
    if: github.event_name == 'workflow_dispatch'
    needs: [build-dev, build-prod]
    name: Deploy to Firebase
    runs-on: ubuntu-latest

    environment: prod

    env:
      ENV_SECRET: ${{ secrets.ENV_SECRET}}
      API_URL: ${{ vars.API_URL }}
      NODE_ENV: ${{ vars.NODE_ENV }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üöÄ Install Firebase CLI
        run: npm install -g firebase-tools

      - name: üì§ Upload APK to Firebase App Distribution
        run: |
          firebase appdistribution:distribute FluxStore/android/app/build/outputs/apk/debug/app-debug.apk \
            --app $FIREBASE_APP_ID \
            --token $FIREBASE_TOKEN \
            --groups testers
