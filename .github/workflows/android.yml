name: Android CI

on:
  push:
    branches: [feature/*ci-cd]
  pull_request:
    branches: [feature/*ci-cd]

  workflow_dispatch:
    inputs:
      chosen-os:
        description: "Description workflow_dispatch"
        required: true
        type: choice
        options:
          - Ubuntu
          - macOS

jobs:
  build:
    name: Build APK (${{ github.event.inputs.chosen-os }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ github.event.inputs.chosen-os }}

    env:
      NODE_ENV: ${{ matrix.environment }}
      ENV_SECRET: ${{ secrets.ENV_SECRET }}
      API_URL: ${{ vars.API_URL }}

    defaults:
      run:
        working-directory: FluxStore

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install Yarn
        run: npm install -g yarn

      - name: 📦 Install dependencies
        run: yarn install

      - name: 🧪 Print Environment Info
        run: |
          echo "NODE_ENV=$NODE_ENV"
          echo "API_URL=$API_URL"
          echo "ENV_SECRET=$ENV_SECRET"

      - name: 📄 Write .env file
        run: echo "API_URL=$API_URL" > .env

      - name: ⚙️ Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: 🏗️ Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug

      - name: 📤 Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-${{ matrix.environment }}.apk
          path: FluxStore/android/app/build/outputs/apk/debug/app-debug.apk

  deploy:
    name: Deploy to Firebase (prod only)
    if: github.event.inputs.chosen-os == 'macOS'
    needs: build
    runs-on: ubuntu-latest

    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Install Firebase CLI
        run: npm install -g firebase-tools

      - name: 📤 Upload APK to Firebase App Distribution
        run: |
          firebase appdistribution:distribute FluxStore/android/app/build/outputs/apk/debug/app-debug.apk \
            --app $FIREBASE_APP_ID \
            --token $FIREBASE_TOKEN \
            --groups testers
